name: CI

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]
  workflow_dispatch:

jobs:
  unit-tests:
    name: Unit tests (fresh resolve)
    runs-on: ubuntu-latest
    timeout-minutes: 3
    strategy:
      matrix:
        ruby: [3.2, 3.3]
      # limit parallel matrix cells to avoid overwhelming rubygems.org
      max-parallel: 2
    steps:
      - uses: actions/checkout@v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          cache-bundle: true

      - name: Install bundler
        run: gem install bundler

      - name: Compute Gemfile hash
        id: gemfile_hash
        run: |
          # compute hash of Gemfile to use in cache key
          if [ -f Gemfile ]; then echo "hash=$(sha1sum Gemfile | awk '{print $1}')" >> "$GITHUB_OUTPUT"; else echo "hash=missing" >> "$GITHUB_OUTPUT"; fi

      - name: Cache Ruby gems
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ matrix.ruby }}-${{ steps.gemfile_hash.outputs.hash }}
          restore-keys: |
            ${{ runner.os }}-gems-${{ matrix.ruby }}-

      - name: Ensure no Gemfile.lock influence
        run: |
          # Remove any checked-in Gemfile.lock to force fresh resolution in CI
          if [ -f Gemfile.lock ]; then git rm -f --ignore-unmatch Gemfile.lock || true; fi

      - name: Install dependencies (fresh)
        run: |
          bundle config set --local path 'vendor/bundle'
          bundle config set --local without 'production'
          bundle install --jobs 1 --retry 2

      - name: Run unit tests
        run: bundle exec rake test

  generator-tests:
    name: Generator tests (Rails matrix, fresh resolve)
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        ruby: [3.2, 3.3]
        appraisal: ["rails-7.1", "rails-7.2", "rails-8.0"]
      # limit parallel matrix cells to avoid overwhelming rubygems.org
      max-parallel: 2
    env:
      APPRAISAL: ${{ matrix.appraisal }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          cache-bundle: true

      - name: Install bundler
        run: gem install bundler

      - name: Install appraisal
        run: gem install appraisal

      - name: Install dependencies (fresh)
        run: |
          bundle config set --local path 'vendor/bundle'
          bundle config set --local without 'production'
          bundle install --jobs 1 --retry 2

      - name: Install appraisal gemfiles
        run: |
          bundle config set --local path 'vendor/bundle'
          bundle config set --local without 'production'
          bundle exec appraisal install

      - name: Cache Ruby gems (generator appraisal)
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ matrix.ruby }}-${{ matrix.appraisal }}
          restore-keys: |
            ${{ runner.os }}-gems-${{ matrix.ruby }}-${{ matrix.appraisal }}-
            ${{ runner.os }}-gems-${{ matrix.ruby }}-

      - name: Run generator tests under appraisal
        run: |
          bundle exec appraisal ${APPRAISAL} rake test TEST=test/generators/install_generator_test.rb
